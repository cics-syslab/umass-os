c
quit
c
quit
b trap.c:188
c
n
p irq
p/bx 0x10000000 + 5
x/bt 0x10000000 + 5
x/bt 0x10000000 + 5
s
cwatch c
context
cunwatch c
context
cunwatch 1
s
p $a0
s
x/bt 0x10000000 + 5
n
s
c
c
c
c
c
c
c
c
c
c 5
c 5
c 5
i b
d 1
c
b uartintr
c
s
p c
p $a0
n
s
finish
p c
n
n
p c
c
c
n
n
p c
n
s
finish
finish
n
s
c
c
qtui
quit
b kernelvec
b printf
c
p/x $mie
p/x $mstatus
i al
c
c
c
cwatch fmt
context
cwatch *fmt
context
cunwatch 2
c
p/x $mie
p/x $mstatus
c
c
c
c
p/x $mstatus
c
c
c
c
c
c
c
c
c
c
c 5
c
c
p/x $mcause
i b
d 1
b uartintr
c
p/x $mstatus
c
c
c
c
c
c
c
i b
b fprintf
pwd
!ls user
b user/kernel.c:71
file user/kernel.c
!ls
file user/_ls.c
file user/_ls
file kernel/kernel
file user/_ls
b ls
c
i b
p/x $mstatus
add-symbol-file kernel/kernel
i b
c
c
c
c
c
c 10
i b
quit
b devintr
c
n
c
d 
i b
b uartintr
c
n
s
c
c
c
s
p c
s
finish
s
c
s
n
p c
cwatch c
s
n
s
c
s
c
n
b
d 2
c
n
s
finish
s
n
quit
b devintr
c
x/7bt 0x10000000+1
c
d 1
b trap.c:191
c
x/7bt 0x10000000+1
c
x/7bt 0x10000000+1
c
x/7bt 0x10000000+1
c
x/7bt 0x10000000+1
x/7bt 0x10000000+1
c
c
quit
b machinevec
b kernelvec
c
b uartinit
d 1
c
b uartintr
c
x/7bt 0x10000000+1
quit
help set
!pwd
set logging file /tmp/log.txt
set logging on
help set
uit
quit
b uartintr
c
c
c
c
s
cwatch execute 'x/7bt 0x10000000+1'
context
c
c
c
set show-compact-regs on
context
s
c
quit
b uservec
c
b usertrap
c
cwatch $mip & 2
cwatch execute "p/x $mip & 2"
context
c
b timervec
c
p/x $mip
b kernelvec
c
i b
c
si
quit
b kernelvec
cwatch eval "$mip & 2"
context
c
p/x $mcause
p/x $mip
si
s
n
n
quit
